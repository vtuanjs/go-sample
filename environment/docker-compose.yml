version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka_go
    ports:
      - "9092:9092"
      - "9094:9094"
      - "9101:9101"
    environment:
      CLUSTER_ID: "HkP7uUHmTpWbYE-ZcFL61g"
      KAFKA_KRAFT_MODE: "true"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,CLIENT://kafka_go:9094"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092,CLIENT://kafka_go:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - go_nw

  redis:
    image: redis:7.2
    container_name: redis_go
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - go_nw

  postgres:
    image: postgres:15
    container_name: postgres_go
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shopdevgo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - go_nw

volumes:
  kafka-data:
  redis-data:
  postgres-data:

networks:
  go_nw:
    name: go_nw
    driver: bridge